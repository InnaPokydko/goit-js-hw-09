{"mappings":"gfAAAA,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAMtB,SAAuBC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GAChCC,YAAW,WACTN,EACFI,EAAQ,CAAEN,WAAUC,UAIpBM,EAAO,CAAEP,WAAUC,S,GAEnBA,E,OAIJQ,QACGC,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,SAASC,OAAOC,QACd,uBAAwCC,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAGjDe,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBW,SAASC,OAAOC,QACd,sBAAqCC,OAAff,EAAS,QAAYe,OAANd,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', createPromise);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n     }, delay) ;\n    });\n  }\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  \n\n"],"names":["parcelRequire","document","querySelector","addEventListener","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","promise","then","param","Notiflix","Notify","failure","concat","catch"],"version":3,"file":"03-promises.a7a0b098.js.map"}