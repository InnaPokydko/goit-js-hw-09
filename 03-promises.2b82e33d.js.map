{"mappings":"oeAAAA,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAMtB,SAAwBC,EAAUC,GAChC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBC,YAAW,KACTN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAIpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE3BA,EAAM,G,IAIVI,QACGI,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBS,SAASC,OAAOC,QACd,uBAAqBZ,QAAiBC,MAAU,IAGnDY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBS,SAASC,OAAOC,QACd,sBAAoBZ,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', createPromise);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n}\n\nfunction createPromise (position, delay)  {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n        setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n     }, delay) ;\n    });\n  }\n\n    Promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  \n\n"],"names":["parcelRequire","document","querySelector","addEventListener","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","Notiflix","Notify","failure","catch"],"version":3,"file":"03-promises.2b82e33d.js.map"}