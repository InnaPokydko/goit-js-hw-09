{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,qBACnCE,UAAWH,SAASC,cAAc,oBAClCG,YAAaJ,SAASC,cAAc,uBAwBtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAIpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlCbT,EAAKC,KAAKgB,iBAAiB,UAG3B,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAASC,OAAOrB,EAAKI,WAAWkB,OAClCC,EAAOF,OAAOrB,EAAKK,UAAUiB,OAC7BE,EAASH,OAAOrB,EAAKM,YAAYgB,OAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChClB,EAAckB,EAAGL,GACdM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA6B,OAAOG,QAAQ,sBAAoBtB,QAAiBC,MAAU,IAElEW,GAAUG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=delay]'),\n  stepDelay: document.querySelector('input[name=step]'),\n  amountDelay: document.querySelector('input[name=amount]'),\n};\nrefs.form.addEventListener('submit', onSubmit);\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let fDelay = Number(refs.firstDelay.value);\nlet step = Number(refs.stepDelay.value);\nlet amount = Number(refs.amountDelay.value);\n\n  for (let i = 0; i <= amount; i += 1) {\n    createPromise(i, fDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    fDelay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// const { delay, step, amount } = e.currentTarget;\n// .then(({ position, delay }) => {\n//   Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// })\n// .catch(({ position, delay }) => {\n//   Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n// });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","stepDelay","amountDelay","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","fDelay","Number","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.08cf34ad.js.map"}