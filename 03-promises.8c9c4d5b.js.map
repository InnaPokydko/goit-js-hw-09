{"mappings":"oeAAAA,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAMtB,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KAChCC,YAAW,KACTN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAIpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE3BA,EAAM,IAIPU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,SAASC,OAAOC,QACd,uBAAqBL,QAAiBC,MAAU,IAGnDK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,SAASC,OAAOC,QACd,sBAAoBL,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', createPromise);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n     }, delay) ;\n    });\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  };\n\n"],"names":["parcelRequire","document","querySelector","addEventListener","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","Notiflix","Notify","failure","catch"],"version":3,"file":"03-promises.8c9c4d5b.js.map"}